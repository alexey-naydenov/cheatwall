#!/usr/bin/env bash

image_size="1024x768"
column_separator="^-$"

function usage {
    echo "Usage: cheatwall [OPTIONS] -- [IMAGEMAGIK_OPTIONS]"
}

function main {
    while getopts ":hc:s:o:i:" opt ; do
	case $opt in
 	    s) image_size=$OPTARG;;
 	    i) input_file=$OPTARG;;
 	    o) output_file=$OPTARG;;
 	    h)
		usage
		exit 0;;
 	    \?)
		echo "invalid option: -$OPTARG" >&2
		exit 1;;
	    :)
		echo "option -$OPTARG requires an argument" >&2
		exit 1;;
	esac
    done
    shift $((OPTIND-1))
    
    verify_arguments

    image_width=$(echo $image_size | sed s/x.*//)
    image_height=$(echo $image_size | sed s/.*x//)

    column_count=$(grep $column_separator $input_file | wc -l)
    column_count=$(expr $column_count + 1)
    column_width=$(expr $image_width / $column_count)

    tmpdir=$(mktemp -d)

    csplit -z -s -f "${tmpdir}/column" $input_file "/${column_separator}/" "{*}"

    image_extension=${output_file##*.}
    for column_file in $(find $tmpdir -type f); do
	sed "/${column_separator}/d" $column_file \
	    | convert -size ${column_width}x${image_height} \
		      "$@" pango:@- "${column_file}.${image_extension}"
    done
    montage $(find $tmpdir -type f -iname "*.$image_extension") -geometry "1x1<" -tile "${column_count}x1" $output_file

    # debug
    # set -o posix; set
}

function fail_with_message {
    echo "$1" >&2
    echo
    usage
    exit 1
}

function verify_arguments {
    if [[ ! $image_size =~ ^[0-9]+x[0-9]+$ ]]; then
	fail_with_message "invalid image size format: $image_size"
    fi
    if [[ ! $input_file ]]; then
	fail_with_message "input file is not specified"
    fi
    if [[ ! -f $input_file ]]; then
	fail_with_message "input file does not exist: $input_file"
    fi
    if [[ ! $output_file ]]; then
	fail_with_message "output file is not specified"
    fi
}



main "$@"
